<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="using:RegistryEditor.Content.Resources">

    <Style TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="CornerRadius"
                Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="ToolTipService.Placement"
                Value="Mouse" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter x:Name="ContentPresenter"
                                      AutomationProperties.AccessibilityView="Raw"
                                      Background="{TemplateBinding Background}"
                                      BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      Content="{TemplateBinding Content}"
                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      AnimatedIcon.State="Normal"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!-- DisabledVisual Should be handled by the control, not the animated icon. -->
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                Value="Normal" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <x:Double x:Key="SplitButtonSecondaryButtonSize">26</x:Double>

    <Style TargetType="SplitButton">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{ThemeResource SplitButtonForeground}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals"
                Value="True" />
        <Setter Property="FocusVisualMargin"
                Value="-3" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Padding"
                Value="{ThemeResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="SplitButton">
                    <Grid x:Name="RootGrid"
                          Background="Transparent"
                          CornerRadius="{TemplateBinding CornerRadius}">

                        <Grid.Resources>
                            <!-- Override the style of the inner buttons so that they don't affect background/foreground/border colors -->
                            <Style TargetType="Button">
                                <Setter Property="Foreground"
                                        Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush"
                                        Value="Transparent" />
                                <Setter Property="BorderThickness"
                                        Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment"
                                        Value="Left" />
                                <Setter Property="VerticalAlignment"
                                        Value="Center" />
                                <Setter Property="FontFamily"
                                        Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight"
                                        Value="Normal" />
                                <Setter Property="FontSize"
                                        Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals"
                                        Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin"
                                        Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid"
                                                  Background="Transparent">

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />

                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground"
                                                                        Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                <Setter Target="RootGrid.Background"
                                                                        Value="{ThemeResource SplitButtonBackgroundDisabled}" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <ContentPresenter x:Name="ContentPresenter"
                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  AutomationProperties.AccessibilityView="Raw" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundPressed}" />
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="Transparent" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SubtleFillColorTertiaryBrush}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="Transparent" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="Transparent" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="Transparent" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SubtleFillColorTertiaryBrush}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="PrimaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                        <Setter Target="PrimaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                        <Setter Target="PrimaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundChecked}" />
                                        <Setter Target="SecondaryBackgroundGrid.Background"
                                                Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                        <Setter Target="SecondaryButton.BorderBrush"
                                                Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                        <Setter Target="SecondaryButton.Foreground"
                                                Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight" />

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)"
                                                Value="0" />
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)"
                                                Value="3" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="PrimaryButtonColumn"
                                              Width="*"
                                              MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn"
                                              Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="PrimaryBackgroundGrid"
                              Background="{TemplateBinding Background}" />

                        <Grid x:Name="SecondaryBackgroundGrid"
                              Background="{TemplateBinding Background}"
                              Grid.Column="2" />

                        <Button x:Name="PrimaryButton"
                                Grid.Column="0"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Content="{TemplateBinding Content}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                IsTabStop="False"
                                AutomationProperties.AccessibilityView="Raw" />

                        <Button x:Name="SecondaryButton"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Padding="0"
                                IsTabStop="False"
                                AutomationProperties.AccessibilityView="Raw">
                            <Button.Content>
                                <TextBlock FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                           FontSize="12"
                                           Text="&#xE974;"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Right"
                                           IsTextScaleFactorEnabled="False"
                                           AutomationProperties.AccessibilityView="Raw" />
                            </Button.Content>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
